<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="2" total="10" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="WebOrders Automation Regression Tests" duration-ms="97534" started-at="2018-12-19T19:45:06Z" finished-at="2018-12-19T19:46:43Z">
    <groups>
    </groups>
    <test name="Chrome tests" duration-ms="89951" started-at="2018-12-19T19:45:06Z" finished-at="2018-12-19T19:46:36Z">
      <class name="com.cbt.tests.login.LoginTests">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.cbt.tests.login.LoginTests@4dfa3a9d]" name="setUp" is-config="true" duration-ms="10062" started-at="2018-12-19T19:45:06Z" finished-at="2018-12-19T19:45:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="positiveloginTest()[pri:0, instance:com.cbt.tests.login.LoginTests@4dfa3a9d]" name="positiveloginTest" duration-ms="7562" started-at="2018-12-19T19:45:16Z" finished-at="2018-12-19T19:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveloginTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.cbt.tests.login.LoginTests@4dfa3a9d]" name="tearDown" is-config="true" duration-ms="4169" started-at="2018-12-19T19:45:24Z" finished-at="2018-12-19T19:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.cbt.tests.login.LoginTests@4dfa3a9d]" name="setUp" is-config="true" duration-ms="9466" started-at="2018-12-19T19:46:16Z" finished-at="2018-12-19T19:46:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="positiveLoginUsingPOM()[pri:2, instance:com.cbt.tests.login.LoginTests@4dfa3a9d]" name="positiveLoginUsingPOM" duration-ms="5289" started-at="2018-12-19T19:46:26Z" finished-at="2018-12-19T19:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveLoginUsingPOM -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.cbt.tests.login.LoginTests@4dfa3a9d]" name="tearDown" is-config="true" duration-ms="4630" started-at="2018-12-19T19:46:31Z" finished-at="2018-12-19T19:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.cbt.tests.login.LoginTests -->
      <class name="com.cbt.tests.order.OrderTests">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.cbt.tests.order.OrderTests@6eebc39e]" name="setUp" is-config="true" duration-ms="5693" started-at="2018-12-19T19:45:28Z" finished-at="2018-12-19T19:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="availableProductsTest()[pri:0, instance:com.cbt.tests.order.OrderTests@6eebc39e]" name="availableProductsTest" duration-ms="5721" started-at="2018-12-19T19:45:33Z" description="Verify default Products and prices" finished-at="2018-12-19T19:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- availableProductsTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.cbt.tests.order.OrderTests@6eebc39e]" name="tearDown" is-config="true" duration-ms="11078" started-at="2018-12-19T19:45:39Z" finished-at="2018-12-19T19:45:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.cbt.tests.order.OrderTests@6eebc39e]" name="setUp" is-config="true" duration-ms="6795" started-at="2018-12-19T19:45:50Z" finished-at="2018-12-19T19:45:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="labelsVerication()[pri:1, instance:com.cbt.tests.order.OrderTests@6eebc39e]" name="labelsVerication" duration-ms="7295" started-at="2018-12-19T19:45:57Z" description="Verify labels and tab links are displayed" finished-at="2018-12-19T19:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelsVerication -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.cbt.tests.order.OrderTests@6eebc39e]" name="tearDown" is-config="true" duration-ms="12045" started-at="2018-12-19T19:46:04Z" finished-at="2018-12-19T19:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.cbt.tests.order.OrderTests -->
    </test> <!-- Chrome tests -->
    <test name="Firefox tests" duration-ms="97534" started-at="2018-12-19T19:45:06Z" finished-at="2018-12-19T19:46:43Z">
      <class name="com.cbt.tests.login.LoginTests">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.cbt.tests.login.LoginTests@6e1567f1]" name="setUp" is-config="true" duration-ms="18689" started-at="2018-12-19T19:45:06Z" finished-at="2018-12-19T19:45:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="positiveloginTest()[pri:0, instance:com.cbt.tests.login.LoginTests@6e1567f1]" name="positiveloginTest" duration-ms="3101" started-at="2018-12-19T19:45:25Z" finished-at="2018-12-19T19:45:28Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[java.net.SocketException: Connection reset
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'PC1', ip: '192.168.0.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: java.net.SocketException: Connection reset
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'PC1', ip: '192.168.0.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:363)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
at com.cbt.tests.login.LoginTests.positiveloginTest(LoginTests.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: java.net.SocketException: Connection reset
at java.net.SocketInputStream.read(Unknown Source)
at java.net.SocketInputStream.read(Unknown Source)
at okio.Okio$2.read(Okio.java:139)
at okio.AsyncTimeout$2.read(AsyncTimeout.java:237)
at okio.RealBufferedSource.indexOf(RealBufferedSource.java:345)
at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:217)
at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212)
at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)
at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveloginTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.cbt.tests.login.LoginTests@6e1567f1]" name="tearDown" is-config="true" duration-ms="14" started-at="2018-12-19T19:45:28Z" finished-at="2018-12-19T19:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.cbt.tests.login.LoginTests@6e1567f1]" name="setUp" is-config="true" duration-ms="19797" started-at="2018-12-19T19:46:17Z" finished-at="2018-12-19T19:46:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="positiveLoginUsingPOM()[pri:2, instance:com.cbt.tests.login.LoginTests@6e1567f1]" name="positiveLoginUsingPOM" duration-ms="4362" started-at="2018-12-19T19:46:37Z" finished-at="2018-12-19T19:46:41Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"id","selector":"ctl00_MainContent_username"}
  (Session info: chrome=70.0.3538.110)
  (Driver info: chromedriver=72.0.3626.7 (efcef9a3ecda02b2132af215116a03852d08b9cb),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'PC1', ip: '192.168.0.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 72.0.3626.7 (efcef9a3ecda02..., userDataDir: C:\Users\PC\AppData\Local\T...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:63665}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 70.0.3538.110, webStorageEnabled: true}
Session ID: 6d93a811803d39dc3b8b48f5a2dde14e
*** Element info: {Using=id, value=ctl00_MainContent_username}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"ctl00_MainContent_username"}
  (Session info: chrome=70.0.3538.110)
  (Driver info: chromedriver=72.0.3626.7 (efcef9a3ecda02b2132af215116a03852d08b9cb),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'PC1', ip: '192.168.0.206', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 72.0.3626.7 (efcef9a3ecda02..., userDataDir: C:\Users\PC\AppData\Local\T...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:63665}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 70.0.3538.110, webStorageEnabled: true}
Session ID: 6d93a811803d39dc3b8b48f5a2dde14e
*** Element info: {Using=id, value=ctl00_MainContent_username}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:363)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.sendKeys(Unknown Source)
at com.cbt.tests.login.LoginTests.positiveLoginUsingPOM(LoginTests.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveLoginUsingPOM -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.cbt.tests.login.LoginTests@6e1567f1]" name="tearDown" is-config="true" duration-ms="2291" started-at="2018-12-19T19:46:41Z" finished-at="2018-12-19T19:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.cbt.tests.login.LoginTests -->
      <class name="com.cbt.tests.order.OrderTests">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.cbt.tests.order.OrderTests@5cb9f472]" name="setUp" is-config="true" duration-ms="18454" started-at="2018-12-19T19:45:28Z" finished-at="2018-12-19T19:45:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="availableProductsTest()[pri:0, instance:com.cbt.tests.order.OrderTests@5cb9f472]" name="availableProductsTest" duration-ms="4359" started-at="2018-12-19T19:45:46Z" description="Verify default Products and prices" finished-at="2018-12-19T19:45:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- availableProductsTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.cbt.tests.order.OrderTests@5cb9f472]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-12-19T19:45:51Z" finished-at="2018-12-19T19:45:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.cbt.tests.order.OrderTests@5cb9f472]" name="setUp" is-config="true" duration-ms="19680" started-at="2018-12-19T19:45:51Z" finished-at="2018-12-19T19:46:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="labelsVerication()[pri:1, instance:com.cbt.tests.order.OrderTests@5cb9f472]" name="labelsVerication" duration-ms="3197" started-at="2018-12-19T19:46:10Z" description="Verify labels and tab links are displayed" finished-at="2018-12-19T19:46:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labelsVerication -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.cbt.tests.order.OrderTests@5cb9f472]" name="tearDown" is-config="true" duration-ms="3468" started-at="2018-12-19T19:46:13Z" finished-at="2018-12-19T19:46:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.cbt.tests.order.OrderTests -->
    </test> <!-- Firefox tests -->
  </suite> <!-- WebOrders Automation Regression Tests -->
</testng-results>
